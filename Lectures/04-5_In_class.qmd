---
title: "Unit 4: In Class Exercises"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---

```{r}
#| label: setup
#| echo: false
#| message: false

library(tidyverse)
library(cowplot)
theme_set(theme_cowplot())
```


## Announcements

- Getting help with code
- Keeping up with the course


## Progress Check 1 next week

- Available Monday 9 am
- Work alone, but use all your resources
- Question due Wednesday night (Units 1-4)
- Ask us if you get stuck or have questions


## PS 3

> During PS3, we were asked to join "plot_ID" and "richness." I was curious if it really matters what order you place objects within the join. If I wrote `left_join(ID, richness)` or `left_join(richness, ID)` it seems like I would get the same results but have a different column order. At the end of the day, does it really matter which object I state first, or should I spend more time understanding what might make one format better than the other in certain situations?


## Multiple joins

```{r}
set.seed(32742)

b1 <- beaver1 |> 
  mutate(time = as.integer(time)) |> 
  select(-activ) |> slice(1:10)

air_temps <- tibble(
  day = 346,
  time = as.integer(c(830, 835, 840, 845, 850, 855,
                      900, 905, 910, 915, 920, 930, 935, 940, 945, 950, 955,
                      1000, 1005, 1010, 1015, 1020, 1025)),
  air_temp = runif(length(time), 9, 10)
)
```

```{r}
#| echo: true

LJ <- left_join(b1, air_temps, by = join_by(time))
left_join(LJ, air_temps, by = join_by(time))
```


## Distributions

- Binomial -- more practice coming (`rbinom()` and `dbinom()`)

> Is there a way to get the a distribution and determine if its correct based on preliminary data?

> What would you do if data/value falls out of distribution range (a data point in a dataset is significantly higher or lower than the typical values within the rest of the data) like the question 3 in the quiz 4? 


## Thinking about probabilities

Why learn probability?

- You could learn all the statistical analyses/tests without really understanding probability.


## Maize kernel germination

Given the following probabilities for maize kernel germination, what is the probability of finding one kernel that is germinated and one that is not?

![](../images/Probability_Constant.drawio.png){fig-align="center"}


## Germination probabilities

- In lecture Video 2, when we are determining the number of corn we need to plant, do you have to keep trying different sample numbers until you reach a probability close enough to 1 to be considered probable? For example, if you were running sum(dbinom(30:#, #, prob = 0.75), would you try random numbers of sample size until you get a probability close to 1. Then, you know with that number of plants it is likely that you will have at least 30 plants germinate? 


## Binomial probabilities

About 10% of people are left handed.

- What is the probability of exactly 0 left handed people in a *random sample* of 24?
- What is the probability of exactly 1?
- What is the probability of 1 *or more*?


## Binomial probabilities

Probability density functions in R: `dbinom()`, `dnorm()`, `dpois()`, etc.

`dbinom(x, size, prob)`

- `x` = Number of "successes"
- `size` = Sample size
- `prob` = Probability of success for each trial


## Binomial probabilities

What is the probability of *exactly* 0 left handed people in a *sample* of 24?

```{r}
#| eval: false

dbinom(0, 24, prob = 0.1)
```


## Binomial probabilities

What is the probability of *exactly* 0 left handed people in a *sample* of 24?

```{r}
#| echo: true

dbinom(0, 24, prob = 0.1)
```


## Binomial probabilities

What is the probability of exactly 1?


## Binomial probabilities

What is the probability of exactly 1?

```{r}
#| echo: true

dbinom(1, 24, prob = 0.1)
```


## Binomial probabilities

What is the probability of 1 *or more*?


## Binomial probabilities

What is the probability of 1 *or more*?

```{r}
#| echo: true

sum(dbinom(1:24, 24, prob = 0.1))
```

*"or more"* is critical here for hypothesis testing:

- Probability of the observed data or any *more extreme*


## Binomial probabilities for Pr[left] = 0.1

```{r}
M <- tibble(Lefties = 0:24,
            Probability = dbinom(0:24, 24, prob = 0.1))
ggplot(M, aes(Lefties, Probability)) + 
  geom_bar(stat = "identity") +
  labs(x = "n Left-handers") +
  scale_x_continuous(breaks = seq(0, 24, by = 5))
```

$n > 8$ have very low probabilities.


## Binomial probabilities for Pr[left] = 0.1

```{r}
M <- tibble(Lefties = 0:24,
            Probability = dbinom(0:24, 24, prob = 0.1)) |> 
  mutate(log_Prob = log10(Probability))
ggplot(M, aes(Lefties, log_Prob)) + 
  geom_bar(stat = "identity") +
  labs(x = "n Left-handers", y = "log10 Probability") +
  scale_x_continuous(breaks = seq(0, 24, by = 5))
```


## Powerball

1. 69 balls in pool #1: Choose 5
1. 26 in the pool #2: Choose 1

Number of winning combinations in pool 1 is the **binomial coefficient**


## Binomial coefficient

- the number of unique ordered sequences of successes that yield exactly $k$ successes from $n$ trials ("n choose k").
- the "successes" can happen in any order
- `choose(n, k)`

$$\left({n\atop k}\right)=\frac{n!}{k!\left(n - k\right)!}$$

```{r}
#| echo: true

choose(3, 2)
```


## Powerball

1. 69 balls in pool #1: Choose 5
1. 26 in the pool #2: Choose 1

```{r}
#| echo: true

choose(69, 5)
choose(26, 1)
```


## Powerball

5 successes from 69 chances $\times$ 1 success from 26 chances.

```{r}
#| echo: true

choose(69, 5) * choose(26, 1)
1 / (choose(69, 5) * choose(26, 1))
```

What if the order had to be correct as well?


## When should I buy a ticket?

*Expected value*: "average" value of a ticket

- Each ticket costs $2

```{r}
#| echo: true

2 * (choose(69, 5) * choose(26, 1))
```

Expected value is >$2 when the jackpot is >$584,402,676


## Conditional probability

- In terms of conditional probability equations, are there any particular situations where it would be more beneficial to solve with natural numbers over probabilities or vice versa? I'd imagine that the ease of which method to use might depend on the overall sizes of the numbers involved in the equation, but I'd be interested to know more about when it would be preferential to utilize one method of solving an equation over the other and vice versa.


## Breast cancer screening

Approximately correct numbers:

1. 1 in 100 women in the age range 40-50 have breast cancer
2. 20% with cancer have a negative mammogram (false negative)
3. 90% without cancer have a negative mammogram (true negative)

What is the probability of a randomly sampled woman having breast cancer, given a negative test?


## Breast cancer screening

$$Pr[C|N] = \frac{False~Negatives}{False~Negatives + True~Negatives}$$

$$Pr[C|N] = \frac{Pr[N|C] \times Pr[C]}{Pr[N]}$$


## Breast cancer screening

- 100 women
- 1 has cancer, 99 do not
- How many overall will get a negative test?

With cancer: 1 * 0.2 = 0.2


Without cancer: 99 * 0.9 = 89.1


Total negative tests: 0.2 + 89.1 = 89.3

Probability of having cancer, given negative test: 

```{r}
#| echo: true

0.2/89.3
```


## Breast cancer screening

Approximately correct numbers:

1. 1 in 100 women in the age range 40-50 have breast cancer
2. 80% with cancer have a positive mammogram (true positives)
3. 10% without cancer have a positive mammogram (false positives)

What is the probability of a randomly sampled woman having breast cancer, given a positive test?


## Breast cancer screening

$$Pr[C|T] = \frac{Pr[T|C] \times Pr[C]}{Pr[T]}$$

- $Pr[T|C] = 0.8$
- $Pr[C] = 1/100 = 0.01$
- $Pr[T]$ = ???


## Breast cancer screening

$$Pr[C|T] = \frac{Pr[T|C] \times Pr[C]}{Pr[T]}$$

- $Pr[T|C] = 0.8$
- $Pr[C] = 1/100 = 0.01$
- $Pr[T] = (0.8 \times 0.01) + (0.1 \times 0.99)$


## Breast cancer screening

$$Pr[C|T] = \frac{Pr[T|C] \times Pr[C]}{Pr[T]}$$

- $Pr[T|C] = 0.8$
- $Pr[C] = 0.01$
- $Pr[T] = (0.8 \times 0.01) + (0.1 \times 0.99)$

```{r}
#| echo: true

(0.8 * 0.01) / ((0.8 * 0.01) + (0.1 * 0.99))
```

