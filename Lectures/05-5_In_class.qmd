---
title: "Unit 5 In Class Discussion"
author:
  - Elizabeth King
  - Kevin Middleton
format:
  revealjs:
    theme: [default, custom.scss]
    standalone: true
    self-contained: true
    logo: QMLS_Logo.png
    slide-number: true
    show-slide-number: all
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---

```{r}
#| label: setup
#| message: false
#| warning: false

library(tidyverse)
library(cowplot)

theme_set(theme_cowplot())

```


## Today's plan

- Progress check reminder
- Big picture framework & questions
- Practice with likelihood (which will answer some of your questions)
- Return for likelihood examples and discussion


## Unit 5 Goals

- How do we learn about the world as scientists? What are our conclusions based on?

## Models

> I still feel slightly foggy on what a "model" is. Is it the equation/calculation you do or is it a set of data you compare against?

## From data to inference via models

- Many paths from data to inference
- No one way is best or uniquely correct

![](../images/Models_schematic.png){fig-align="center"}

## Hands-on Practice

- Use lecture slides (& captions) & your notes
- Focus on understanding each step & specific things you do not understand
- Work for 30 minutes, then regroup

## Maximizing through optimization

- 5 heads from 20 coin flips

What is the maximum likelihood estimate of $Pr[Heads]$

```{r}
#| echo: true

log_lik <- function(theta, heads, flips) {
  dbinom(heads, flips, prob = theta, log = TRUE)
}

log_lik(0.5, 5, 20)
dbinom(5, 20, prob = 0.5, log = TRUE)
```


## Maximizing through optimization

```{r}
#| echo: true

optim(par = 0.5,
      fn = log_lik,
      heads = 5,
      flips = 20,
      method = "Brent",
      lower = 0, upper = 1,
      control = list(fnscale = -1))
```


## Maximizing through optimization

```{r}
#| echo: true
40/87
dbinom(40, 87, prob  = 40/87, log = TRUE)
optim(par = 0.5,
      fn = log_lik,
      heads = 40,
      flips = 87,
      method = "Brent",
      lower = 0, upper = 1,
      control = list(fnscale = -1))
```





